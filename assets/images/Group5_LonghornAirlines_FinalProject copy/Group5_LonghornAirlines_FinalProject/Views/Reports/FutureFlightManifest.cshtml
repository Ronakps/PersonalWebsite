@model Group5_LonghornAirlines_FinalProject.Models.Flight

@{
    ViewData["Title"] = "Flight Manifest";
}

<div style="margin-bottom: 20px; margin-top: 30px;">
    <a asp-action="Index" asp-controller="Flights" class="btn btn-danger">Return to Search</a>
</div>

<h4>Flight Manifest</h4>
<table class="table">
    <thead>
        <tr>
            <th>Flight Number</th>
            <th>Departure Time</th>
            <th>Departure City</th>
            <th>Arrival City</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.FlightNumber</td>
            <td>@Model.DepartureTime.ToShortTimeString()</td>
            <td>@Model.FlightPath.DepartureCity</td>
            <td>@Model.FlightPath.ArrivalCity</td>
        </tr>
    </tbody>
</table>

<h4>Seat Information</h4>
<table class="table">
    <thead>
        <tr>
            <th>Row</th>
            <th>Seats</th>
            <th>Seats</th>
            <th>Seats</th>
            <th>Seats</th>
        </tr>
    </thead>
    <tbody>
        @{
            var rows = new[]
            {
        new { Row = 1, Seats = new[] { "A1", "", "", "B1" } },
        new { Row = 2, Seats = new[] { "A2", "", "", "B2" } },
        new { Row = 3, Seats = new[] { "A3", "B3", "C3", "D3" } },
        new { Row = 4, Seats = new[] { "A4", "B4", "C4", "D4" } },
        new { Row = 5, Seats = new[] { "A5", "B5", "C5", "D5" } }
        };
        }
        @foreach (var row in rows)
        {
            <tr>
                <td>@row.Row</td>
                @foreach (var seat in row.Seats)
                {
                    var ticketWithSeat = Model.Tickets.FirstOrDefault(t => t.Seat.ToString() == seat);
                    var textColor = "gray"; // Default color
                    var fontWeight = "normal"; // Default font weight

                    if (ticketWithSeat != null)
                    {
                        var seatCheckedIn = ticketWithSeat.TicketStatus == TicketStatus.Active;
                        textColor = seatCheckedIn ? "green" : "gray";

                        if (textColor == "green")
                        {
                            fontWeight = "bold"; // Make text bold only if textColor is green
                        }
                    }

                    <td class="seat-cell">
                        <span class="seat" style="color: @textColor;font-weight: @fontWeight;">@seat</span>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<h4>Legend</h4>
<ul>
    <li><span class="legend-box" style="background-color: gray;"></span> Empty/Pending Seat</li>
    <li><span class="legend-box" style="background-color: green;"></span> Active Ticket</li>
    @* <li><span class="legend-box" style="background-color: red;"></span> Purchased Seat (No Show)</li> *@
</ul>

<style>
    .legend-box {
        display: inline-block;
        width: 20px; /* Adjust the width of the colored box */
        height: 20px; /* Adjust the height of the colored box */
        margin-right: 5px; /* Adjust spacing between the box and the label */
        vertical-align: middle; /* Align the box vertically with the text */
    }
</style>




<h4>Ticket Reporting Data</h4>

@{
    int activeTicketsCount = 0;
    decimal totalRevenue = 0;

    foreach (var ticket in Model.Tickets)
    {
        if (ticket.TicketStatus == TicketStatus.Active)
        {
            activeTicketsCount++;
            totalRevenue += ticket.Price + ticket.ModificationFee;
        }
        else if (ticket.TicketStatus == TicketStatus.Canceled)
        {
            totalRevenue += ticket.ModificationFee;
        }
    }
}
<p>Total number of tickets sold: @activeTicketsCount</p>
<p>Total revenue generated: @totalRevenue</p>



@* <p>Total number of tickets sold: @Model.Tickets.Count</p>

@{
    decimal totalRevenue = Model.Tickets.Sum(t => t.Price + t.ModificationFee);
}

<p>Total revenue generated: @totalRevenue</p> *@

<h4>Customer Data</h4>
<table class="table">
    <thead>
        <tr>
            <th>Passenger Name</th>
            <th>Seat Number</th>
            <th>Ticket Status</th>
            <th>Ticket Price</th>
            <th>Seat Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ticket in Model.Tickets)
        {
            @if(ticket.TicketStatus == TicketStatus.Active)
            {
                <tr>
                    <td>@(ticket.TicketHolder.FirstName) @(ticket.TicketHolder.LastName)</td>
                    <td>@ticket.Seat</td>
                    @* <td>@(ticket.TicketStatus == TicketStatus.Active ? "Active" : "Canceled")</td> *@
                    <td>@ticket.TicketStatus</td>
                    <td>@ticket.Price</td>
                    <td>@ticket.SeatStatus</td>
                </tr>
            }
            
        }

    </tbody>
</table>